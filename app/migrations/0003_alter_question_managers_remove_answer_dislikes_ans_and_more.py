# Generated by Django 4.0.3 on 2022-04-13 12:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app', '0002_question_last_update_alter_question_answers_and_more'),
    ]

    operations = [
        migrations.AlterModelManagers(
            name='question',
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.RemoveField(
            model_name='answer',
            name='dislikes_ans',
        ),
        migrations.RemoveField(
            model_name='answer',
            name='likes_ans',
        ),
        migrations.RemoveField(
            model_name='question',
            name='dislikes_quest',
        ),
        migrations.RemoveField(
            model_name='question',
            name='likes_quest',
        ),
        migrations.AddField(
            model_name='answer',
            name='is_correct',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='answer',
            name='rating_ans',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='question',
            name='rating_quest',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='question',
            name='title_quest',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='questioninstance',
            name='status',
            field=models.CharField(choices=[('m', 'On_moderation'), ('p', 'Published'), ('b', 'Banned')], default='m', max_length=1),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_date', models.DateTimeField()),
                ('gender', models.CharField(choices=[('m', 'Male'), ('f', 'Female'), ('o', 'Other')], max_length=1)),
                ('avatar', models.ImageField(default='img/fishman.png', upload_to='img/<django.db.models.fields.related.OneToOneField>.png')),
                ('count_questions', models.IntegerField(default=0)),
                ('count_answers', models.IntegerField(default=0)),
                ('count_resolved_answers', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile_related', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LikeQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField(choices=[('1', 'Like'), ('-1', 'Dislike')])),
                ('pub_date', models.DateTimeField(auto_now=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.profile')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_like', to='app.question')),
            ],
        ),
        migrations.CreateModel(
            name='LikeAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField(choices=[('1', 'Like'), ('-1', 'Dislike')])),
                ('pub_date', models.DateTimeField(auto_now=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_like', to='app.answer')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.profile')),
            ],
        ),
    ]
